<?php
// This script and data application were generated by AppGini 5.10
// Download AppGini for free from http://bigprof.com/appgini/download/

/*
	ajax-callable script that returns code for either a combo drop-down or an auto-complete
	drop-down, based on number of items.
	
	GET parameters:
	===============
	t: table name
	f: lookup field name
	s: selected id
	o: 0 (default) for text-only or 1 for full options list
	text: selected text
	filterer_[filterer]: name of filterer field to be used to filter the drop-down contents
				must be one of the filteres defined for the concerned field
*/

	$curr_dir = dirname(__FILE__);
	include("$curr_dir/defaultLang.php");
	include("$curr_dir/language.php");
	include("$curr_dir/lib.php");
	
	// drop-downs config
	$lookups = array(   
		'user' => array(  
		),
		'maklumat' => array(  
		),
		'guru' => array(  
		),
		'pentadbir' => array(  
		)
	);


	$table = $_GET['t'];
	$lookup_field = $_GET['f'];
	$selected_id = $_GET['s'];
	$selected_text = $_GET['text'];
	$returnOptions = ($_GET['o'] == 1 ? true : false);
	
	// requested field is defined in the $lookups array?
	if(!$table || !$lookup_field) die($Translation['error:'] . " Invalid request");
	if(!isset($lookups[$table][$lookup_field])) die($Translation['error:'] . " Invalid request");
	
	// can user access the requested table?
	$perm = getTablePermissions($table);
	if(!$perm[0]) die($Translation['tableAccessDenied']);
	
	$field = $lookups[$table][$lookup_field];
	
	// any filterers specified?
	$wheres = array();
	if(is_array($field['filterers'])){
		foreach($field['filterers'] as $filterer){
			$get = (isset($_GET["filterer_{$filterer}"]) ? $_GET["filterer_{$filterer}"] : false);
			if($get){
				$wheres[] = "`{$field['parent_table']}`.`$filterer`='" . makeSafe($get) . "'";
			}
		}
	}
	
	// inherit permissions?
	if($field['inherit_permissions']){
		$inherit = permissions_sql($field['parent_table']);
		if($inherit === false) die($Translation['tableAccessDenied']);
		
		if($inherit['where']) $wheres[] = $inherit['where'];
		if($inherit['from']) $field['parent_from'] .= ", {$inherit['from']}";
	}
	
	if(count($wheres)){
		$where = 'WHERE ' . implode(' AND ', $wheres);
	}
	
	// define the combo and return the code
	$combo = new DataCombo;
	if($field['custom_query']){
		$combo->Query = $field['custom_query'];
	}else{
		$combo->Query = "SELECT " . ($field['inherit_permissions'] ? 'DISTINCT ' : '') . "`{$field['parent_table']}`.`{$field['parent_pk_field']}`, {$field['parent_caption']} FROM {$field['parent_from']} {$where} ORDER BY 2";
	}
	$combo->table = $table;
	$combo->parent_table = $field['parent_table'];
	$combo->SelectName = $lookup_field;
	$combo->ListType = $field['list_type'];
	if($selected_id){
		$combo->SelectedData = $selected_id;
	}elseif($selected_text){
		$combo->SelectedData = getValueGivenCaption($combo->Query, $selected_text);
	}
	
	$combo->Render();
	$combo->HTML = str_replace('<select ', '<select onchange="' . $lookup_field . '_changed();" ', $combo->HTML);
	
	// return response
	if($returnOptions){
		?><span id="<?php echo $lookup_field; ?>-combo-list"><?php echo $combo->HTML; ?></span><?php
	}else{
		?>
			<span id="<?php echo $lookup_field; ?>-match-text"><?php echo $combo->MatchText; ?></span>
			<input type="hidden" id="<?php echo $lookup_field; ?>" value="<?php echo htmlspecialchars($combo->SelectedData); ?>" />
		<?php
	}

